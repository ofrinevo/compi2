Parsed Quicksort.ic successfully!

Abstract Syntax Tree: Quicksort.ic

Declaration of class: Quicksort
Declaration of field: a
Primitive data type: 1-dimensional array of int
Declaration of virtual method: partition
Primitive data type: int
Parameter: low
Primitive data type: int
Parameter: high
Primitive data type: int
Declaration of local variable: pivot, with initial value
Primitive data type: int
Reference to array
Reference to variable: a
Reference to variable: low
Declaration of local variable: i, with initial value
Primitive data type: int
Reference to variable: low
Declaration of local variable: j, with initial value
Primitive data type: int
Reference to variable: high
Declaration of local variable: tmp
Primitive data type: int
While statement
Boolean literal: true
Block of statements
While statement
Logical binary operation: less than
Reference to array
Reference to variable: a
Reference to variable: i
Reference to variable: pivot
Assignment statement
Reference to variable: i
Mathematical binary operation: addition
Reference to variable: i
Integer literal: 1
While statement
Logical binary operation: greater than
Reference to array
Reference to variable: a
Reference to variable: j
Reference to variable: pivot
Assignment statement
Reference to variable: j
Mathematical binary operation: subtraction
Reference to variable: j
Integer literal: 1
If statement
Logical binary operation: greater than or equal to
Reference to variable: i
Reference to variable: j
Break statement
Assignment statement
Reference to variable: tmp
Reference to array
Reference to variable: a
Reference to variable: i
Assignment statement
Reference to array
Reference to variable: a
Reference to variable: i
Reference to array
Reference to variable: a
Reference to variable: j
Assignment statement
Reference to array
Reference to variable: a
Reference to variable: j
Reference to variable: tmp
Assignment statement
Reference to variable: i
Mathematical binary operation: addition
Reference to variable: i
Integer literal: 1
Assignment statement
Reference to variable: j
Mathematical binary operation: subtraction
Reference to variable: j
Integer literal: 1
Return statement, with return value
Reference to variable: j
Declaration of virtual method: quicksort
Primitive data type: void
Parameter: low
Primitive data type: int
Parameter: high
Primitive data type: int
If statement
Logical binary operation: less than
Reference to variable: low
Reference to variable: high
Block of statements
Declaration of local variable: mid, with initial value
Primitive data type: int
Call to virtual method: partition
Reference to variable: low
Reference to variable: high
Method call statement
Call to virtual method: quicksort
Reference to variable: low
Reference to variable: mid
Method call statement
Call to virtual method: quicksort
Mathematical binary operation: addition
Reference to variable: mid
Integer literal: 1
Reference to variable: high
Declaration of virtual method: initArray
Primitive data type: void
Declaration of local variable: i, with initial value
Primitive data type: int
Integer literal: 0
While statement
Logical binary operation: less than
Reference to variable: i
Reference to array length
Reference to variable: a
Block of statements
Assignment statement
Reference to array
Reference to variable: a
Reference to variable: i
Call to static method: random, in class Library
Mathematical binary operation: multiplication
Reference to array length
Reference to variable: a
Integer literal: 2
Assignment statement
Reference to variable: i
Mathematical binary operation: addition
Reference to variable: i
Integer literal: 1
Declaration of virtual method: printArray
Primitive data type: void
Declaration of local variable: i, with initial value
Primitive data type: int
Integer literal: 0
Method call statement
Call to static method: print, in class Library
String literal: "Array elements: "
While statement
Logical binary operation: less than
Reference to variable: i
Reference to array length
Reference to variable: a
Block of statements
Method call statement
Call to static method: printi, in class Library
Reference to array
Reference to variable: a
Reference to variable: i
Method call statement
Call to static method: print, in class Library
String literal: " "
Assignment statement
Reference to variable: i
Mathematical binary operation: addition
Reference to variable: i
Integer literal: 1
Method call statement
Call to static method: print, in class Library
String literal: "\n"
Declaration of static method: main
Primitive data type: void
Parameter: args
Primitive data type: 1-dimensional array of string
Declaration of local variable: n
Primitive data type: int
If statement
Logical binary operation: inequality
Reference to array length
Reference to variable: args
Integer literal: 1
Block of statements
Method call statement
Call to static method: println, in class Library
String literal: "Unspecified array length"
Method call statement
Call to static method: exit, in class Library
Integer literal: 1
Assignment statement
Reference to variable: n
Call to static method: stoi, in class Library
Reference to array
Reference to variable: args
Integer literal: 0
Integer literal: 0
If statement
Logical binary operation: less than or equal to
Reference to variable: n
Integer literal: 0
Block of statements
Method call statement
Call to static method: println, in class Library
String literal: "Invalid array length"
Method call statement
Call to static method: exit, in class Library
Integer literal: 1
Declaration of local variable: s, with initial value
User-defined data type: Quicksort
Instantiation of class: Quicksort
Assignment statement
Reference to variable: a, in external scope
Reference to variable: s
Array allocation
Primitive data type: int
Reference to variable: n
Method call statement
Call to virtual method: initArray, in external scope
Reference to variable: s
Method call statement
Call to virtual method: printArray, in external scope
Reference to variable: s
Method call statement
Call to virtual method: quicksort, in external scope
Reference to variable: s
Integer literal: 0
Mathematical binary operation: subtraction
Reference to variable: n
Integer literal: 1
Method call statement
Call to virtual method: printArray, in external scope
Reference to variable: s
